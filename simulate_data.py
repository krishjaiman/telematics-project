{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMt7JtimBFSt9A6MHF45Hma"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":277},"id":"de58-CC8XdaA","executionInfo":{"status":"ok","timestamp":1753949469857,"user_tz":-330,"elapsed":2605,"user":{"displayName":"Krish Jaiman","userId":"10384049234675738565"}},"outputId":"587ebf4c-e3c8-41f8-93c7-b1c8d247742b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Generating simulated driving data...\n","Generated trip 1 for driver_safe_01 with 3360 data points.\n","Generated trip 2 for driver_safe_01 with 1380 data points.\n","Generated trip 3 for driver_safe_01 with 1440 data points.\n","Generated trip 4 for driver_safe_01 with 1680 data points.\n","Generated trip 5 for driver_safe_01 with 2100 data points.\n","Generated trip 1 for driver_risky_02 with 4440 data points.\n","Generated trip 2 for driver_risky_02 with 3960 data points.\n","Generated trip 3 for driver_risky_02 with 1320 data points.\n","Generated trip 4 for driver_risky_02 with 4140 data points.\n","Generated trip 5 for driver_risky_02 with 2220 data points.\n","\n","Successfully generated 26040 data points.\n","Data saved to driving_data.csv in the Colab environment.\n","Downloading the file to your local machine...\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_38591753-1aee-4199-b73c-f4753db4d21e\", \"driving_data.csv\", 3403582)"]},"metadata":{}}],"source":["import pandas as pd\n","import numpy as np\n","import datetime\n","import uuid\n","from google.colab import files\n","\n","def generate_trip_data(driver_id, trip_id, start_time, duration_minutes, start_lat, start_lon, behavior_profile):\n","    \"\"\"\n","    Generates simulated driving data for a single trip.\n","\n","    Args:\n","        driver_id (str): The ID of the driver.\n","        trip_id (str): The unique ID for the trip.\n","        start_time (datetime): The start time of the trip.\n","        duration_minutes (int): The duration of the trip in minutes.\n","        start_lat (float): Starting latitude.\n","        start_lon (float): Starting longitude.\n","        behavior_profile (dict): A dictionary defining the driving style.\n","\n","    Returns:\n","        pandas.DataFrame: A DataFrame containing the simulated trip data.\n","    \"\"\"\n","    trip_data = []\n","    num_points = duration_minutes * 60  # One data point per second\n","\n","    # Unpack behavior profile\n","    avg_speed = behavior_profile['avg_speed']\n","    speed_std_dev = behavior_profile['speed_std_dev']\n","    accel_std_dev = behavior_profile['accel_std_dev']\n","    harsh_event_prob = behavior_profile['harsh_event_prob']\n","    harsh_event_multiplier = behavior_profile['harsh_event_multiplier']\n","\n","    current_lat = start_lat\n","    current_lon = start_lon\n","\n","    for i in range(num_points):\n","        timestamp = start_time + datetime.timedelta(seconds=i)\n","\n","        # Simulate speed with some noise\n","        speed = np.random.normal(avg_speed, speed_std_dev)\n","        speed = max(0, speed) # Speed cannot be negative\n","\n","        # Simulate acceleration (forward/backward) and lateral movement (side-to-side)\n","        accel_x = np.random.normal(0, accel_std_dev)\n","        accel_y = np.random.normal(0, accel_std_dev)\n","        accel_z = 9.8 # Gravity\n","\n","        # Introduce random harsh events\n","        if np.random.rand() < harsh_event_prob:\n","            accel_x *= harsh_event_multiplier # Harsh acceleration/braking\n","            accel_y *= harsh_event_multiplier # Harsh turn\n","\n","        # Update position based on speed (simple approximation)\n","        # 1 second interval, speed in km/h -> m/s\n","        distance_per_second = (speed * 1000) / 3600\n","        # Rough conversion: 1 degree latitude/longitude is approx 111 km\n","        lat_change = (distance_per_second / 111000) * np.cos(np.random.uniform(0, 2*np.pi))\n","        lon_change = (distance_per_second / 111000) * np.sin(np.random.uniform(0, 2*np.pi))\n","        current_lat += lat_change\n","        current_lon += lon_change\n","\n","        trip_data.append({\n","            'driver_id': driver_id,\n","            'trip_id': trip_id,\n","            'timestamp': timestamp,\n","            'latitude': round(current_lat, 6),\n","            'longitude': round(current_lon, 6),\n","            'speed_kmh': round(speed, 2),\n","            'accelerometer_x': round(accel_x, 4),\n","            'accelerometer_y': round(accel_y, 4),\n","            'accelerometer_z': round(accel_z, 4)\n","        })\n","\n","    return pd.DataFrame(trip_data)\n","\n","# --- Main script execution ---\n","\n","print(\"Generating simulated driving data...\")\n","\n","# Define behavior profiles\n","SAFE_DRIVER_PROFILE = {\n","    'avg_speed': 45,\n","    'speed_std_dev': 5,\n","    'accel_std_dev': 0.5,\n","    'harsh_event_prob': 0.001, # Low probability of harsh events\n","    'harsh_event_multiplier': 2\n","}\n","\n","RISKY_DRIVER_PROFILE = {\n","    'avg_speed': 70,\n","    'speed_std_dev': 15,\n","    'accel_std_dev': 1.0,\n","    'harsh_event_prob': 0.01, # Higher probability of harsh events\n","    'harsh_event_multiplier': 4\n","}\n","\n","all_trips = []\n","\n","# --- Driver 1: Safe Driver ---\n","driver_1_id = \"driver_safe_01\"\n","for i in range(5): # Generate 5 trips\n","    trip_duration = np.random.randint(15, 60) # 15 to 60 minutes\n","    start_datetime = datetime.datetime.now() - datetime.timedelta(days=np.random.randint(1, 30))\n","    trip_df = generate_trip_data(\n","        driver_1_id, f\"trip_{uuid.uuid4()}\", start_datetime, trip_duration,\n","        40.7128, -74.0060, SAFE_DRIVER_PROFILE\n","    )\n","    all_trips.append(trip_df)\n","    print(f\"Generated trip {i+1} for {driver_1_id} with {len(trip_df)} data points.\")\n","\n","# --- Driver 2: Risky Driver ---\n","driver_2_id = \"driver_risky_02\"\n","for i in range(5): # Generate 5 trips\n","    trip_duration = np.random.randint(20, 75)\n","    start_datetime = datetime.datetime.now() - datetime.timedelta(days=np.random.randint(1, 30))\n","    trip_df = generate_trip_data(\n","        driver_2_id, f\"trip_{uuid.uuid4()}\", start_datetime, trip_duration,\n","        34.0522, -118.2437, RISKY_DRIVER_PROFILE\n","    )\n","    all_trips.append(trip_df)\n","    print(f\"Generated trip {i+1} for {driver_2_id} with {len(trip_df)} data points.\")\n","\n","# Combine all trips into a single DataFrame\n","final_df = pd.concat(all_trips, ignore_index=True)\n","\n","# Save to CSV in the Colab environment\n","output_filename = \"driving_data.csv\"\n","final_df.to_csv(output_filename, index=False)\n","\n","print(f\"\\nSuccessfully generated {len(final_df)} data points.\")\n","print(f\"Data saved to {output_filename} in the Colab environment.\")\n","\n","# --- Trigger the download ---\n","print(\"Downloading the file to your local machine...\")\n","files.download(output_filename)"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import datetime\n","import uuid\n","from google.colab import files\n","\n","def generate_trip_data(driver_id, trip_id, start_time, duration_minutes, start_lat, start_lon, behavior_profile):\n","    \"\"\"\n","    Generates simulated driving data for a single trip.\n","    \"\"\"\n","    trip_data = []\n","    num_points = duration_minutes * 60  # One data point per second\n","\n","    # Unpack behavior profile\n","    avg_speed = behavior_profile['avg_speed']\n","    speed_std_dev = behavior_profile['speed_std_dev']\n","    accel_std_dev = behavior_profile['accel_std_dev']\n","    harsh_event_prob = behavior_profile['harsh_event_prob']\n","    harsh_event_multiplier = behavior_profile['harsh_event_multiplier']\n","\n","    current_lat = start_lat\n","    current_lon = start_lon\n","\n","    for i in range(num_points):\n","        timestamp = start_time + datetime.timedelta(seconds=i)\n","        speed = max(0, np.random.normal(avg_speed, speed_std_dev))\n","        accel_x = np.random.normal(0, accel_std_dev)\n","        accel_y = np.random.normal(0, accel_std_dev)\n","        accel_z = 9.8\n","\n","        if np.random.rand() < harsh_event_prob:\n","            accel_x *= harsh_event_multiplier\n","            accel_y *= harsh_event_multiplier\n","\n","        distance_per_second = (speed * 1000) / 3600\n","        lat_change = (distance_per_second / 111000) * np.cos(np.random.uniform(0, 2*np.pi))\n","        lon_change = (distance_per_second / 111000) * np.sin(np.random.uniform(0, 2*np.pi))\n","        current_lat += lat_change\n","        current_lon += lon_change\n","\n","        trip_data.append({\n","            'driver_id': driver_id,\n","            'trip_id': trip_id,\n","            'timestamp': timestamp,\n","            'latitude': round(current_lat, 6),\n","            'longitude': round(current_lon, 6),\n","            'speed_kmh': round(speed, 2),\n","            'accelerometer_x': round(accel_x, 4),\n","            'accelerometer_y': round(accel_y, 4),\n","            'accelerometer_z': round(accel_z, 4)\n","        })\n","\n","    return pd.DataFrame(trip_data)\n","\n","# --- Main script execution ---\n","\n","print(\"Generating larger simulated driving dataset...\")\n","\n","# Define behavior profiles\n","SAFE_DRIVER_PROFILE = {\n","    'avg_speed': 45, 'speed_std_dev': 5, 'accel_std_dev': 0.5,\n","    'harsh_event_prob': 0.001, 'harsh_event_multiplier': 2\n","}\n","RISKY_DRIVER_PROFILE = {\n","    'avg_speed': 70, 'speed_std_dev': 15, 'accel_std_dev': 1.0,\n","    'harsh_event_prob': 0.01, 'harsh_event_multiplier': 4\n","}\n","\n","all_trips = []\n","NUM_DRIVERS_PER_TYPE = 5\n","NUM_TRIPS_PER_DRIVER = 10\n","\n","# --- Generate data for Safe Drivers ---\n","for i in range(NUM_DRIVERS_PER_TYPE):\n","    driver_id = f\"driver_safe_{i+1:02d}\"\n","    print(f\"\\nGenerating data for {driver_id}...\")\n","    for j in range(NUM_TRIPS_PER_DRIVER):\n","        trip_duration = np.random.randint(15, 60)\n","        start_datetime = datetime.datetime.now() - datetime.timedelta(days=np.random.randint(1, 90))\n","        trip_df = generate_trip_data(\n","            driver_id, f\"trip_{uuid.uuid4()}\", start_datetime, trip_duration,\n","            40.7128, -74.0060, SAFE_DRIVER_PROFILE\n","        )\n","        all_trips.append(trip_df)\n","        print(f\"  - Trip {j+1}/{NUM_TRIPS_PER_DRIVER} generated with {len(trip_df)} points.\")\n","\n","# --- Generate data for Risky Drivers ---\n","for i in range(NUM_DRIVERS_PER_TYPE):\n","    driver_id = f\"driver_risky_{i+1:02d}\"\n","    print(f\"\\nGenerating data for {driver_id}...\")\n","    for j in range(NUM_TRIPS_PER_DRIVER):\n","        trip_duration = np.random.randint(20, 75)\n","        start_datetime = datetime.datetime.now() - datetime.timedelta(days=np.random.randint(1, 90))\n","        trip_df = generate_trip_data(\n","            driver_id, f\"trip_{uuid.uuid4()}\", start_datetime, trip_duration,\n","            34.0522, -118.2437, RISKY_DRIVER_PROFILE\n","        )\n","        all_trips.append(trip_df)\n","        print(f\"  - Trip {j+1}/{NUM_TRIPS_PER_DRIVER} generated with {len(trip_df)} points.\")\n","\n","# Combine all trips into a single DataFrame\n","final_df = pd.concat(all_trips, ignore_index=True)\n","\n","# Save to CSV\n","output_filename = \"driving_data_large.csv\"\n","final_df.to_csv(output_filename, index=False)\n","\n","print(f\"\\nSuccessfully generated a larger dataset with {len(final_df)} data points.\")\n","print(f\"Total trips: {final_df['trip_id'].nunique()}\")\n","print(f\"Data saved to {output_filename} in the Colab environment.\")\n","\n","# Trigger the download\n","print(\"Downloading the file to your local machine...\")\n","files.download(output_filename)"],"metadata":{"id":"oLw-BwlziMnR","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1754066343371,"user_tz":-330,"elapsed":21877,"user":{"displayName":"Krish Jaiman","userId":"10384049234675738565"}},"outputId":"16bac78a-4ca5-44ba-c927-421a5cfbe584"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Generating larger simulated driving dataset...\n","\n","Generating data for driver_safe_01...\n","  - Trip 1/10 generated with 2580 points.\n","  - Trip 2/10 generated with 3480 points.\n","  - Trip 3/10 generated with 1920 points.\n","  - Trip 4/10 generated with 1800 points.\n","  - Trip 5/10 generated with 3180 points.\n","  - Trip 6/10 generated with 1020 points.\n","  - Trip 7/10 generated with 2400 points.\n","  - Trip 8/10 generated with 1980 points.\n","  - Trip 9/10 generated with 2400 points.\n","  - Trip 10/10 generated with 2100 points.\n","\n","Generating data for driver_safe_02...\n","  - Trip 1/10 generated with 2820 points.\n","  - Trip 2/10 generated with 1680 points.\n","  - Trip 3/10 generated with 2700 points.\n","  - Trip 4/10 generated with 2940 points.\n","  - Trip 5/10 generated with 1440 points.\n","  - Trip 6/10 generated with 2580 points.\n","  - Trip 7/10 generated with 1140 points.\n","  - Trip 8/10 generated with 2520 points.\n","  - Trip 9/10 generated with 3420 points.\n","  - Trip 10/10 generated with 3360 points.\n","\n","Generating data for driver_safe_03...\n","  - Trip 1/10 generated with 1680 points.\n","  - Trip 2/10 generated with 900 points.\n","  - Trip 3/10 generated with 3180 points.\n","  - Trip 4/10 generated with 1620 points.\n","  - Trip 5/10 generated with 3060 points.\n","  - Trip 6/10 generated with 960 points.\n","  - Trip 7/10 generated with 1500 points.\n","  - Trip 8/10 generated with 1620 points.\n","  - Trip 9/10 generated with 2820 points.\n","  - Trip 10/10 generated with 1560 points.\n","\n","Generating data for driver_safe_04...\n","  - Trip 1/10 generated with 1020 points.\n","  - Trip 2/10 generated with 1500 points.\n","  - Trip 3/10 generated with 1440 points.\n","  - Trip 4/10 generated with 3240 points.\n","  - Trip 5/10 generated with 1440 points.\n","  - Trip 6/10 generated with 1680 points.\n","  - Trip 7/10 generated with 3060 points.\n","  - Trip 8/10 generated with 2940 points.\n","  - Trip 9/10 generated with 1500 points.\n","  - Trip 10/10 generated with 2220 points.\n","\n","Generating data for driver_safe_05...\n","  - Trip 1/10 generated with 2520 points.\n","  - Trip 2/10 generated with 1500 points.\n","  - Trip 3/10 generated with 1620 points.\n","  - Trip 4/10 generated with 1320 points.\n","  - Trip 5/10 generated with 3180 points.\n","  - Trip 6/10 generated with 900 points.\n","  - Trip 7/10 generated with 1260 points.\n","  - Trip 8/10 generated with 1320 points.\n","  - Trip 9/10 generated with 3060 points.\n","  - Trip 10/10 generated with 1740 points.\n","\n","Generating data for driver_risky_01...\n","  - Trip 1/10 generated with 2880 points.\n","  - Trip 2/10 generated with 4320 points.\n","  - Trip 3/10 generated with 1320 points.\n","  - Trip 4/10 generated with 4140 points.\n","  - Trip 5/10 generated with 1740 points.\n","  - Trip 6/10 generated with 1620 points.\n","  - Trip 7/10 generated with 4440 points.\n","  - Trip 8/10 generated with 3720 points.\n","  - Trip 9/10 generated with 2640 points.\n","  - Trip 10/10 generated with 1260 points.\n","\n","Generating data for driver_risky_02...\n","  - Trip 1/10 generated with 4140 points.\n","  - Trip 2/10 generated with 4200 points.\n","  - Trip 3/10 generated with 4440 points.\n","  - Trip 4/10 generated with 3540 points.\n","  - Trip 5/10 generated with 3480 points.\n","  - Trip 6/10 generated with 2400 points.\n","  - Trip 7/10 generated with 1320 points.\n","  - Trip 8/10 generated with 1680 points.\n","  - Trip 9/10 generated with 3840 points.\n","  - Trip 10/10 generated with 2580 points.\n","\n","Generating data for driver_risky_03...\n","  - Trip 1/10 generated with 1560 points.\n","  - Trip 2/10 generated with 1800 points.\n","  - Trip 3/10 generated with 2700 points.\n","  - Trip 4/10 generated with 3300 points.\n","  - Trip 5/10 generated with 3120 points.\n","  - Trip 6/10 generated with 4140 points.\n","  - Trip 7/10 generated with 2340 points.\n","  - Trip 8/10 generated with 4380 points.\n","  - Trip 9/10 generated with 1920 points.\n","  - Trip 10/10 generated with 3780 points.\n","\n","Generating data for driver_risky_04...\n","  - Trip 1/10 generated with 3540 points.\n","  - Trip 2/10 generated with 3900 points.\n","  - Trip 3/10 generated with 2700 points.\n","  - Trip 4/10 generated with 2220 points.\n","  - Trip 5/10 generated with 1680 points.\n","  - Trip 6/10 generated with 2160 points.\n","  - Trip 7/10 generated with 1740 points.\n","  - Trip 8/10 generated with 3360 points.\n","  - Trip 9/10 generated with 3780 points.\n","  - Trip 10/10 generated with 1440 points.\n","\n","Generating data for driver_risky_05...\n","  - Trip 1/10 generated with 1800 points.\n","  - Trip 2/10 generated with 2040 points.\n","  - Trip 3/10 generated with 3480 points.\n","  - Trip 4/10 generated with 3840 points.\n","  - Trip 5/10 generated with 3900 points.\n","  - Trip 6/10 generated with 1380 points.\n","  - Trip 7/10 generated with 4200 points.\n","  - Trip 8/10 generated with 4020 points.\n","  - Trip 9/10 generated with 2280 points.\n","  - Trip 10/10 generated with 2400 points.\n","\n","Successfully generated a larger dataset with 249420 data points.\n","Total trips: 100\n","Data saved to driving_data_large.csv in the Colab environment.\n","Downloading the file to your local machine...\n"]},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["download(\"download_23985497-50b5-4277-acef-62564019adf7\", \"driving_data_large.csv\", 32581550)"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"urnr5-Uef97r"},"execution_count":null,"outputs":[]}]}